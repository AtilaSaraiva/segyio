language: python
python:
  - 3.6

env:
    global:
        - UNICODE_WIDTH=32
        - PLAT=x86_64
        - MB_PYTHON_VERSION=$TRAVIS_PYTHON_VERSION
        - VERSION=$(echo $TRAVIS_TAG | sed s/v//)
os:
  - linux

dist: xenial

services: docker
sudo: required

matrix:
    fast_finish: true
    include:
        - python: 3.7
          sudo: true
        - python: 3.8
          sudo: true
          env: MB_ML_VER=2010
        - python: 3.9
          sudo: true
          env: MB_ML_VER=2010
        - python: 3.9
          dist: xenial
          sudo: true
          env: MB_ML_VER=2010
        - compiler: clang
          python: 3.7
          env:
            - SCAN="scan-build --status-bugs"
            - SOURCEDEPLOY=1
            - MKDOC="-DBUILD_DOC=ON -DSPHINX_ARGS=-WT"
        - os: osx
          language: generic
          env: MB_PYTHON_VERSION=3.6
          python: 3.6
        - os: osx
          language: generic
          env: MB_PYTHON_VERSION=3.7
          python: 3.7
        - os: osx
          language: generic
          env: MB_PYTHON_VERSION=3.8
          python: 3.8
        - os: osx
          language: generic
          env: MB_PYTHON_VERSION=3.9
          python: 3.9

addons:
    apt:
      sources:
        - sourceline: 'ppa:jokva/backports'
        - george-edison55-precise-backports # cmake 3
      packages:
        - cppcheck
        - cmake
        - cmake-data

before_install:
    - git clone https://github.com/matthew-brett/multibuild
    - unset -f pushd
    - unset -f popd
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - before_install

install:
  - pip install -r requirements.txt
  - pip install -r requirements-doc.txt
  - pip install setuptools setuptools-scm scikit-build
  - pip install bandit pytest pytest-runner

before_script:
  - enabled="-DBUILD_PYTHON=OFF -DBUILD_MEX=OFF"
  - if [[ -n "${MB_PYTHON_VERSION+1}" ]]; then
        enabled="$enabled -DBUILD_PYTHON=ON -DREQUIRE_PYTHON=ON";
    fi
  - bandit -c bandit.yml -r python
  - cmake --version
  - mkdir build
  - pushd build
  - $SCAN cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
          -DBUILD_SHARED_LIBS=ON
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_INSTALL_NAME_DIR=/usr/local/lib
          $MKDOC
          $enabled ..
  - if command -v cppcheck; then
        cppcheck
             --enable=style,portability,performance,warning
             --library=posix
             --library=$TRAVIS_BUILD_DIR/cppcheck/segyio.cfg
             --suppressions-list=$TRAVIS_BUILD_DIR/cppcheck/suppressions.txt
             --inline-suppr
             --project=compile_commands.json
             --error-exitcode=1
        ;
    fi
  - popd

# distutils/setuptools on macos ignores the --rpath argument, so set
# DYLD_LIBRARY_PATH so that the freshly-built image is picked up on for the
# tests.
#
# segyio is configured with CMAKE_INSTALL_NAME_DIR so that the wheel build on
# OS X so the delocate tool can figure out what dylib to include.
script:
  - pushd build
  - export DYLD_LIBRARY_PATH=$PWD/lib
  - $SCAN make && ctest --output-on-failure
  - sudo make install
  - popd
  # install works, so remove the _skbuild because it having root permissions
  # from make install breaks build_wheel
  - sudo rm -rf python/_skbuild
  - build_wheel python $PLAT
  - install_run $PLAT
  - mv wheelhouse python/dist
